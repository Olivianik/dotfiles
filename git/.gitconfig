[user]
    name = Tatsuya Fujisaki
    email = 1838962+tatsuyafujisaki@users.noreply.github.com
[core]
    excludesfile = ~/.gitignore
    editor = code -w
    autocrlf = input # Set "input" on Linux/Mac. Set "true" on Windows. https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration
    # whitespace = cr-at-eol # prevents "git diff" on Windows from showing "^M".
[credential]
    helper = osxkeychain # sets "osxkeychain" on Mac. Set "wincred" on Windows, instead.
[fetch]
    prune = true
    pruneTags = true
    recurseSubmodules = true
[http]
    emptyAuth = true # prevents "remote: HTTP Basic: Accesss denied" when cloning a repository. https://docs.gitlab.com/ee/integration/kerberos.html#http-basic-access-denied-when-cloning
[pull]
    rebase = true
[rebase]
    autosquash = true
    autostash = true
[diff]
    tool = vscode
[difftool]
    prompt = false
[difftool "vscode"]
    cmd = code -w -d $LOCAL $REMOTE
[merge]
    tool = vscode
[mergetool]
    prompt = false
[mergetool "vscode"]
    cmd = code -w $MERGED
[alias]
    a = !pbpaste | git apply --ignore-space-change
    ar = archive -o output.zip HEAD
    b = branch --show-current # available since 2.22.
    bd = branch --delete
    ca = commit --all -m
    cam = commit --all --amend -m # stages all changes and replaces the previous commit using the new commit message.
    can = !git add --all && git commit --all --amend --no-edit # adds untracked files, stages all changes, and replaces the previous commit reusing the existing commit message.
    cge = config --global --edit # opens ~/.gitconfig
    cgl = config --global --list # lists all the variables in ~/.gitconfig
    cm = commit -m
    co = checkout
    cp = cherry-pick
    csol = config --show-origin --list
    d = !git diff | pbcopy
    dl = !git branch | grep -v -e main -e master -e develop | xargs git branch -D # -D is a shortcut for "--delete --force". "dl" means "delete local branches".
    dno = diff --name-only
    dnoa = !git diff --name-only HEAD~ | awk -F/ '{print $NF}' | cut -d. -f1 | sort
    dns = diff --name-status
    dsd = diff --stat develop
    empty = commit --allow-empty --allow-empty-message --no-edit
    lp = log --patch -- # takes <file> and shows the change history of the file.
    m = merge --no-edit
    ma = merge --abort
    mt = mergetool
    pf = push --force
    r = rebase
    ra = rebase --abort
    rc = rebase --continue
    rd = !git pull origin develop && git rebase develop
    rgu = remote get-url origin
    ri = rebase --interactive
    rir = rebase --interactive --root
    rs = reset HEAD~
    rsh = reset HEAD~ --hard
    rsk = rebase --skip
    sno = show --name-only
    sns = show --name-status
    sw = switch
    # git clean:
    # -d is to delete untracked directories too.
    # git restore:
    # --staged is to undo staged changes.
    # --worktree is to undo unstaged changes.
    up = !git clean -d --force && git restore --staged --worktree . && git fetch --prune --prune-tags && git pull --all --autostash --rebase --recurse-submodules
    # stash-related
    pop = stash pop
    st = stash push --include-untracked
    stc = stash clear
    drop = stash drop
    stl = stash list
    sts = stash show
